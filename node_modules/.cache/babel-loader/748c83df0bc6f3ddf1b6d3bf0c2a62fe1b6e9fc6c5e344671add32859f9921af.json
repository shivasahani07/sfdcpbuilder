{"ast":null,"code":"// Salesforce Deployment Service\n// This service handles metadata generation and deployment to Salesforce orgs\n\nexport class SalesforceDeploymentService {\n  constructor(orgInfo) {\n    this.orgInfo = orgInfo;\n    this.apiVersion = (orgInfo === null || orgInfo === void 0 ? void 0 : orgInfo.apiVersion) || '58.0';\n    this.instanceUrl = orgInfo === null || orgInfo === void 0 ? void 0 : orgInfo.instanceUrl;\n  }\n\n  // Generate custom object metadata\n  generateCustomObjectMetadata(module, industry) {\n    const objectName = `${industry}_${module.name.replace(/\\s+/g, '_')}__c`;\n    return {\n      fullName: objectName,\n      label: `${industry} ${module.name}`,\n      pluralLabel: `${industry} ${module.name}s`,\n      nameField: {\n        displayFormat: `${industry}-{0000}`,\n        label: `${industry} ${module.name} Name`,\n        type: 'AutoNumber',\n        startingNumber: 1\n      },\n      deploymentStatus: 'InDevelopment',\n      sharingModel: 'ReadWrite',\n      visibility: 'Public',\n      fields: this.generateFieldsForModule(module, industry)\n    };\n  }\n\n  // Generate custom fields for the module\n  generateFieldsForModule(module, industry) {\n    const fields = [];\n\n    // Standard fields based on module features\n    if (module.features.includes('Status Tracking')) {\n      fields.push({\n        fullName: 'Status__c',\n        label: 'Status',\n        type: 'Picklist',\n        required: true,\n        valueSet: {\n          valueSetDefinition: {\n            value: [{\n              fullName: 'New',\n              default: true\n            }, {\n              fullName: 'In Progress'\n            }, {\n              fullName: 'Completed'\n            }, {\n              fullName: 'Cancelled'\n            }]\n          }\n        }\n      });\n    }\n    if (module.features.includes('Priority Management')) {\n      fields.push({\n        fullName: 'Priority__c',\n        label: 'Priority',\n        type: 'Picklist',\n        valueSet: {\n          valueSetDefinition: {\n            value: [{\n              fullName: 'Low'\n            }, {\n              fullName: 'Medium',\n              default: true\n            }, {\n              fullName: 'High'\n            }, {\n              fullName: 'Critical'\n            }]\n          }\n        }\n      });\n    }\n    if (module.features.includes('Date Tracking')) {\n      fields.push({\n        fullName: 'Start_Date__c',\n        label: 'Start Date',\n        type: 'Date'\n      });\n      fields.push({\n        fullName: 'End_Date__c',\n        label: 'End Date',\n        type: 'Date'\n      });\n    }\n    if (module.features.includes('Amount Tracking')) {\n      fields.push({\n        fullName: 'Amount__c',\n        label: 'Amount',\n        type: 'Currency',\n        precision: 18,\n        scale: 2\n      });\n    }\n\n    // Industry-specific fields\n    if (industry === 'Healthcare') {\n      fields.push({\n        fullName: 'Patient_ID__c',\n        label: 'Patient ID',\n        type: 'Text',\n        length: 50,\n        unique: true\n      });\n      fields.push({\n        fullName: 'HIPAA_Compliant__c',\n        label: 'HIPAA Compliant',\n        type: 'Checkbox',\n        defaultValue: true\n      });\n    }\n    if (industry === 'Financial Services') {\n      fields.push({\n        fullName: 'Account_Number__c',\n        label: 'Account Number',\n        type: 'Text',\n        length: 50,\n        unique: true\n      });\n      fields.push({\n        fullName: 'Risk_Level__c',\n        label: 'Risk Level',\n        type: 'Picklist',\n        valueSet: {\n          valueSetDefinition: {\n            value: [{\n              fullName: 'Low'\n            }, {\n              fullName: 'Medium'\n            }, {\n              fullName: 'High'\n            }]\n          }\n        }\n      });\n    }\n    if (industry === 'Real Estate') {\n      fields.push({\n        fullName: 'Property_Type__c',\n        label: 'Property Type',\n        type: 'Picklist',\n        required: true,\n        valueSet: {\n          valueSetDefinition: {\n            value: [{\n              fullName: 'Residential'\n            }, {\n              fullName: 'Commercial'\n            }, {\n              fullName: 'Industrial'\n            }, {\n              fullName: 'Land'\n            }, {\n              fullName: 'Mixed Use'\n            }]\n          }\n        }\n      });\n      fields.push({\n        fullName: 'Property_Address__c',\n        label: 'Property Address',\n        type: 'Text',\n        length: 255,\n        required: true\n      });\n      fields.push({\n        fullName: 'Property_Value__c',\n        label: 'Property Value',\n        type: 'Currency',\n        precision: 18,\n        scale: 2\n      });\n      fields.push({\n        fullName: 'Square_Footage__c',\n        label: 'Square Footage',\n        type: 'Number',\n        precision: 10,\n        scale: 0\n      });\n      fields.push({\n        fullName: 'Bedrooms__c',\n        label: 'Bedrooms',\n        type: 'Number',\n        precision: 2,\n        scale: 0\n      });\n      fields.push({\n        fullName: 'Bathrooms__c',\n        label: 'Bathrooms',\n        type: 'Number',\n        precision: 3,\n        scale: 1\n      });\n      fields.push({\n        fullName: 'Year_Built__c',\n        label: 'Year Built',\n        type: 'Number',\n        precision: 4,\n        scale: 0\n      });\n      fields.push({\n        fullName: 'Listing_Status__c',\n        label: 'Listing Status',\n        type: 'Picklist',\n        valueSet: {\n          valueSetDefinition: {\n            value: [{\n              fullName: 'Active'\n            }, {\n              fullName: 'Pending'\n            }, {\n              fullName: 'Sold'\n            }, {\n              fullName: 'Withdrawn'\n            }, {\n              fullName: 'Coming Soon'\n            }]\n          }\n        }\n      });\n    }\n    return fields;\n  }\n\n  // Generate Flow metadata\n  generateFlowMetadata(module, industry) {\n    const flowName = `${industry}_${module.name.replace(/\\s+/g, '_')}_Flow`;\n    return {\n      fullName: flowName,\n      label: `${industry} ${module.name} Flow`,\n      processType: 'AutoLaunchedFlow',\n      status: 'Draft',\n      start: {\n        locationX: 50,\n        locationY: 0,\n        connector: {\n          targetReference: 'Decision1'\n        }\n      },\n      decisions: [{\n        name: 'Decision1',\n        label: 'Check Status',\n        locationX: 50,\n        locationY: 100,\n        rules: [{\n          name: 'Rule1',\n          conditionLogic: 'and',\n          conditions: [{\n            leftValueReference: '$Record.Status__c',\n            operator: 'EqualTo',\n            rightValue: {\n              stringValue: 'New'\n            }\n          }],\n          connector: {\n            targetReference: 'Assignment1'\n          }\n        }]\n      }],\n      assignments: [{\n        name: 'Assignment1',\n        label: 'Set Priority',\n        locationX: 50,\n        locationY: 200,\n        assignmentItems: [{\n          assignToReference: '$Record.Priority__c',\n          operator: 'Assign',\n          value: {\n            stringValue: 'Medium'\n          }\n        }]\n      }]\n    };\n  }\n\n  // Generate Validation Rules\n  generateValidationRules(module, industry) {\n    const rules = [];\n\n    // Date validation rule\n    rules.push({\n      fullName: `${industry}_${module.name.replace(/\\s+/g, '_')}__c.End_Date_After_Start_Date`,\n      active: true,\n      errorConditionFormula: 'End_Date__c < Start_Date__c',\n      errorMessage: 'End Date must be after Start Date',\n      errorDisplayField: 'End_Date__c'\n    });\n\n    // Amount validation rule\n    if (module.features.includes('Amount Tracking')) {\n      rules.push({\n        fullName: `${industry}_${module.name.replace(/\\s+/g, '_')}__c.Amount_Positive`,\n        active: true,\n        errorConditionFormula: 'Amount__c <= 0',\n        errorMessage: 'Amount must be greater than zero',\n        errorDisplayField: 'Amount__c'\n      });\n    }\n\n    // Industry-specific validation rules\n    if (industry === 'Healthcare') {\n      rules.push({\n        fullName: `${industry}_${module.name.replace(/\\s+/g, '_')}__c.Patient_ID_Required`,\n        active: true,\n        errorConditionFormula: 'ISBLANK(Patient_ID__c)',\n        errorMessage: 'Patient ID is required for healthcare records',\n        errorDisplayField: 'Patient_ID__c'\n      });\n    }\n    if (industry === 'Real Estate') {\n      rules.push({\n        fullName: `${industry}_${module.name.replace(/\\s+/g, '_')}__c.Property_Address_Required`,\n        active: true,\n        errorConditionFormula: 'ISBLANK(Property_Address__c)',\n        errorMessage: 'Property Address is required for real estate records',\n        errorDisplayField: 'Property_Address__c'\n      });\n      rules.push({\n        fullName: `${industry}_${module.name.replace(/\\s+/g, '_')}__c.Property_Value_Positive`,\n        active: true,\n        errorConditionFormula: 'Property_Value__c <= 0',\n        errorMessage: 'Property Value must be greater than zero',\n        errorDisplayField: 'Property_Value__c'\n      });\n      rules.push({\n        fullName: `${industry}_${module.name.replace(/\\s+/g, '_')}__c.Year_Built_Valid`,\n        active: true,\n        errorConditionFormula: 'Year_Built__c < 1800 || Year_Built__c > YEAR(TODAY())',\n        errorMessage: 'Year Built must be between 1800 and current year',\n        errorDisplayField: 'Year_Built__c'\n      });\n      rules.push({\n        fullName: `${industry}_${module.name.replace(/\\s+/g, '_')}__c.Square_Footage_Positive`,\n        active: true,\n        errorConditionFormula: 'Square_Footage__c <= 0',\n        errorMessage: 'Square Footage must be greater than zero',\n        errorDisplayField: 'Square_Footage__c'\n      });\n    }\n    return rules;\n  }\n\n  // Generate Permission Sets\n  generatePermissionSets(module, industry) {\n    const permissionSetName = `${industry}_${module.name.replace(/\\s+/g, '_')}_Permissions`;\n    return {\n      fullName: permissionSetName,\n      label: `${industry} ${module.name} Permissions`,\n      description: `Permission set for ${industry} ${module.name} functionality`,\n      objectPermissions: [{\n        object: `${industry}_${module.name.replace(/\\s+/g, '_')}__c`,\n        allowCreate: true,\n        allowDelete: true,\n        allowEdit: true,\n        allowRead: true,\n        modifyAllRecords: false,\n        viewAllRecords: true\n      }],\n      fieldPermissions: this.generateFieldPermissions(module, industry)\n    };\n  }\n\n  // Generate Field Permissions\n  generateFieldPermissions(module, industry) {\n    const fields = this.generateFieldsForModule(module, industry);\n    return fields.map(field => ({\n      field: `${industry}_${module.name.replace(/\\s+/g, '_')}__c.${field.fullName}`,\n      editable: true,\n      readable: true\n    }));\n  }\n\n  // Deploy metadata to Salesforce\n  async deployMetadata(metadata, deploymentType = 'partial') {\n    try {\n      // In a real implementation, this would use Salesforce Metadata API\n      console.log('Deploying metadata to Salesforce:', metadata);\n\n      // Simulate deployment process\n      const deploymentResult = await this.simulateDeployment(metadata);\n      return {\n        success: true,\n        deploymentId: deploymentResult.deploymentId,\n        message: 'Deployment completed successfully',\n        results: deploymentResult.results\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message,\n        message: 'Deployment failed'\n      };\n    }\n  }\n\n  // Simulate deployment process\n  async simulateDeployment(metadata) {\n    // Simulate API delay\n    await new Promise(resolve => setTimeout(resolve, 3000));\n    return {\n      deploymentId: '0Af000000000000AAA',\n      status: 'Succeeded',\n      results: metadata.map(item => ({\n        fullName: item.fullName,\n        success: true,\n        problem: null\n      }))\n    };\n  }\n\n  // Generate complete deployment package\n  generateDeploymentPackage(modules, industry) {\n    const deploymentPackage = {\n      packageManifest: {\n        apiVersion: this.apiVersion,\n        types: []\n      },\n      metadata: []\n    };\n    modules.forEach(module => {\n      // Add Custom Object\n      const customObject = this.generateCustomObjectMetadata(module, industry);\n      deploymentPackage.metadata.push(customObject);\n\n      // Add Flow\n      const flow = this.generateFlowMetadata(module, industry);\n      deploymentPackage.metadata.push(flow);\n\n      // Add Validation Rules\n      const validationRules = this.generateValidationRules(module, industry);\n      validationRules.forEach(rule => {\n        deploymentPackage.metadata.push(rule);\n      });\n\n      // Add Permission Set\n      const permissionSet = this.generatePermissionSets(module, industry);\n      deploymentPackage.metadata.push(permissionSet);\n    });\n\n    // Update package manifest\n    deploymentPackage.packageManifest.types = [{\n      name: 'CustomObject',\n      members: deploymentPackage.metadata.filter(m => m.fullName.includes('__c'))\n    }, {\n      name: 'Flow',\n      members: deploymentPackage.metadata.filter(m => m.processType)\n    }, {\n      name: 'ValidationRule',\n      members: deploymentPackage.metadata.filter(m => m.errorConditionFormula)\n    }, {\n      name: 'PermissionSet',\n      members: deploymentPackage.metadata.filter(m => m.objectPermissions)\n    }];\n    return deploymentPackage;\n  }\n\n  // Export metadata as XML (for manual deployment)\n  exportMetadataAsXML(deploymentPackage) {\n    // This would generate proper Salesforce metadata XML\n    return {\n      customObjects: this.generateXMLForCustomObjects(deploymentPackage.metadata),\n      flows: this.generateXMLForFlows(deploymentPackage.metadata),\n      validationRules: this.generateXMLForValidationRules(deploymentPackage.metadata),\n      permissionSets: this.generateXMLForPermissionSets(deploymentPackage.metadata)\n    };\n  }\n  generateXMLForCustomObjects(metadata) {\n    const objects = metadata.filter(m => m.fullName.includes('__c'));\n    return objects.map(obj => `\n      <CustomObject xmlns=\"http://soap.sforce.com/2006/04/metadata\">\n        <label>${obj.label}</label>\n        <pluralLabel>${obj.pluralLabel}</pluralLabel>\n        <nameField>\n          <displayFormat>${obj.nameField.displayFormat}</displayFormat>\n          <label>${obj.nameField.label}</label>\n          <type>${obj.nameField.type}</label>\n        </nameField>\n        <deploymentStatus>${obj.deploymentStatus}</deploymentStatus>\n        <sharingModel>${obj.sharingModel}</sharingModel>\n        ${obj.fields.map(field => `\n          <fields>\n            <fullName>${field.fullName}</fullName>\n            <label>${field.label}</label>\n            <type>${field.type}</type>\n            ${field.required ? '<required>true</required>' : ''}\n          </fields>\n        `).join('')}\n      </CustomObject>\n    `).join('\\n');\n  }\n  generateXMLForFlows(metadata) {\n    const flows = metadata.filter(m => m.processType);\n    return flows.map(flow => `\n      <Flow xmlns=\"http://soap.sforce.com/2006/04/metadata\">\n        <label>${flow.label}</label>\n        <processType>${flow.processType}</processType>\n        <status>${flow.status}</status>\n        <start>\n          <locationX>${flow.start.locationX}</locationX>\n          <locationY>${flow.start.locationY}</locationY>\n        </start>\n      </Flow>\n    `).join('\\n');\n  }\n  generateXMLForValidationRules(metadata) {\n    const rules = metadata.filter(m => m.errorConditionFormula);\n    return rules.map(rule => `\n      <ValidationRule xmlns=\"http://soap.sforce.com/2006/04/metadata\">\n        <fullName>${rule.fullName}</fullName>\n        <active>${rule.active}</active>\n        <errorConditionFormula>${rule.errorConditionFormula}</errorConditionFormula>\n        <errorMessage>${rule.errorMessage}</errorMessage>\n        <errorDisplayField>${rule.errorDisplayField}</errorDisplayField>\n      </ValidationRule>\n    `).join('\\n');\n  }\n  generateXMLForPermissionSets(metadata) {\n    const permissionSets = metadata.filter(m => m.objectPermissions);\n    return permissionSets.map(ps => `\n      <PermissionSet xmlns=\"http://soap.sforce.com/2006/04/metadata\">\n        <label>${ps.label}</label>\n        <description>${ps.description}</description>\n        ${ps.objectPermissions.map(obj => `\n          <objectPermissions>\n            <object>${obj.object}</object>\n            <allowCreate>${obj.allowCreate}</allowCreate>\n            <allowDelete>${obj.allowDelete}</allowDelete>\n            <allowEdit>${obj.allowEdit}</allowEdit>\n            <allowRead>${obj.allowRead}</allowRead>\n            <viewAllRecords>${obj.viewAllRecords}</viewAllRecords>\n          </objectPermissions>\n        `).join('')}\n      </PermissionSet>\n    `).join('\\n');\n  }\n}\nexport default SalesforceDeploymentService;","map":{"version":3,"names":["SalesforceDeploymentService","constructor","orgInfo","apiVersion","instanceUrl","generateCustomObjectMetadata","module","industry","objectName","name","replace","fullName","label","pluralLabel","nameField","displayFormat","type","startingNumber","deploymentStatus","sharingModel","visibility","fields","generateFieldsForModule","features","includes","push","required","valueSet","valueSetDefinition","value","default","precision","scale","length","unique","defaultValue","generateFlowMetadata","flowName","processType","status","start","locationX","locationY","connector","targetReference","decisions","rules","conditionLogic","conditions","leftValueReference","operator","rightValue","stringValue","assignments","assignmentItems","assignToReference","generateValidationRules","active","errorConditionFormula","errorMessage","errorDisplayField","generatePermissionSets","permissionSetName","description","objectPermissions","object","allowCreate","allowDelete","allowEdit","allowRead","modifyAllRecords","viewAllRecords","fieldPermissions","generateFieldPermissions","map","field","editable","readable","deployMetadata","metadata","deploymentType","console","log","deploymentResult","simulateDeployment","success","deploymentId","message","results","error","Promise","resolve","setTimeout","item","problem","generateDeploymentPackage","modules","deploymentPackage","packageManifest","types","forEach","customObject","flow","validationRules","rule","permissionSet","members","filter","m","exportMetadataAsXML","customObjects","generateXMLForCustomObjects","flows","generateXMLForFlows","generateXMLForValidationRules","permissionSets","generateXMLForPermissionSets","objects","obj","join","ps"],"sources":["/Users/shivasahani/project/src/services/SalesforceDeploymentService.js"],"sourcesContent":["// Salesforce Deployment Service\n// This service handles metadata generation and deployment to Salesforce orgs\n\nexport class SalesforceDeploymentService {\n  constructor(orgInfo) {\n    this.orgInfo = orgInfo;\n    this.apiVersion = orgInfo?.apiVersion || '58.0';\n    this.instanceUrl = orgInfo?.instanceUrl;\n  }\n\n  // Generate custom object metadata\n  generateCustomObjectMetadata(module, industry) {\n    const objectName = `${industry}_${module.name.replace(/\\s+/g, '_')}__c`;\n    \n    return {\n      fullName: objectName,\n      label: `${industry} ${module.name}`,\n      pluralLabel: `${industry} ${module.name}s`,\n      nameField: {\n        displayFormat: `${industry}-{0000}`,\n        label: `${industry} ${module.name} Name`,\n        type: 'AutoNumber',\n        startingNumber: 1\n      },\n      deploymentStatus: 'InDevelopment',\n      sharingModel: 'ReadWrite',\n      visibility: 'Public',\n      fields: this.generateFieldsForModule(module, industry)\n    };\n  }\n\n  // Generate custom fields for the module\n  generateFieldsForModule(module, industry) {\n    const fields = [];\n    \n    // Standard fields based on module features\n    if (module.features.includes('Status Tracking')) {\n      fields.push({\n        fullName: 'Status__c',\n        label: 'Status',\n        type: 'Picklist',\n        required: true,\n        valueSet: {\n          valueSetDefinition: {\n            value: [\n              { fullName: 'New', default: true },\n              { fullName: 'In Progress' },\n              { fullName: 'Completed' },\n              { fullName: 'Cancelled' }\n            ]\n          }\n        }\n      });\n    }\n\n    if (module.features.includes('Priority Management')) {\n      fields.push({\n        fullName: 'Priority__c',\n        label: 'Priority',\n        type: 'Picklist',\n        valueSet: {\n          valueSetDefinition: {\n            value: [\n              { fullName: 'Low' },\n              { fullName: 'Medium', default: true },\n              { fullName: 'High' },\n              { fullName: 'Critical' }\n            ]\n          }\n        }\n      });\n    }\n\n    if (module.features.includes('Date Tracking')) {\n      fields.push({\n        fullName: 'Start_Date__c',\n        label: 'Start Date',\n        type: 'Date'\n      });\n      \n      fields.push({\n        fullName: 'End_Date__c',\n        label: 'End Date',\n        type: 'Date'\n      });\n    }\n\n    if (module.features.includes('Amount Tracking')) {\n      fields.push({\n        fullName: 'Amount__c',\n        label: 'Amount',\n        type: 'Currency',\n        precision: 18,\n        scale: 2\n      });\n    }\n\n    // Industry-specific fields\n    if (industry === 'Healthcare') {\n      fields.push({\n        fullName: 'Patient_ID__c',\n        label: 'Patient ID',\n        type: 'Text',\n        length: 50,\n        unique: true\n      });\n      \n      fields.push({\n        fullName: 'HIPAA_Compliant__c',\n        label: 'HIPAA Compliant',\n        type: 'Checkbox',\n        defaultValue: true\n      });\n    }\n\n    if (industry === 'Financial Services') {\n      fields.push({\n        fullName: 'Account_Number__c',\n        label: 'Account Number',\n        type: 'Text',\n        length: 50,\n        unique: true\n      });\n      \n      fields.push({\n        fullName: 'Risk_Level__c',\n        label: 'Risk Level',\n        type: 'Picklist',\n        valueSet: {\n          valueSetDefinition: {\n            value: [\n              { fullName: 'Low' },\n              { fullName: 'Medium' },\n              { fullName: 'High' }\n            ]\n          }\n        }\n      });\n    }\n\n    if (industry === 'Real Estate') {\n      fields.push({\n        fullName: 'Property_Type__c',\n        label: 'Property Type',\n        type: 'Picklist',\n        required: true,\n        valueSet: {\n          valueSetDefinition: {\n            value: [\n              { fullName: 'Residential' },\n              { fullName: 'Commercial' },\n              { fullName: 'Industrial' },\n              { fullName: 'Land' },\n              { fullName: 'Mixed Use' }\n            ]\n          }\n        }\n      });\n      \n      fields.push({\n        fullName: 'Property_Address__c',\n        label: 'Property Address',\n        type: 'Text',\n        length: 255,\n        required: true\n      });\n      \n      fields.push({\n        fullName: 'Property_Value__c',\n        label: 'Property Value',\n        type: 'Currency',\n        precision: 18,\n        scale: 2\n      });\n      \n      fields.push({\n        fullName: 'Square_Footage__c',\n        label: 'Square Footage',\n        type: 'Number',\n        precision: 10,\n        scale: 0\n      });\n      \n      fields.push({\n        fullName: 'Bedrooms__c',\n        label: 'Bedrooms',\n        type: 'Number',\n        precision: 2,\n        scale: 0\n      });\n      \n      fields.push({\n        fullName: 'Bathrooms__c',\n        label: 'Bathrooms',\n        type: 'Number',\n        precision: 3,\n        scale: 1\n      });\n      \n      fields.push({\n        fullName: 'Year_Built__c',\n        label: 'Year Built',\n        type: 'Number',\n        precision: 4,\n        scale: 0\n      });\n      \n      fields.push({\n        fullName: 'Listing_Status__c',\n        label: 'Listing Status',\n        type: 'Picklist',\n        valueSet: {\n          valueSetDefinition: {\n            value: [\n              { fullName: 'Active' },\n              { fullName: 'Pending' },\n              { fullName: 'Sold' },\n              { fullName: 'Withdrawn' },\n              { fullName: 'Coming Soon' }\n            ]\n          }\n        }\n      });\n    }\n\n    return fields;\n  }\n\n  // Generate Flow metadata\n  generateFlowMetadata(module, industry) {\n    const flowName = `${industry}_${module.name.replace(/\\s+/g, '_')}_Flow`;\n    \n    return {\n      fullName: flowName,\n      label: `${industry} ${module.name} Flow`,\n      processType: 'AutoLaunchedFlow',\n      status: 'Draft',\n      start: {\n        locationX: 50,\n        locationY: 0,\n        connector: {\n          targetReference: 'Decision1'\n        }\n      },\n      decisions: [\n        {\n          name: 'Decision1',\n          label: 'Check Status',\n          locationX: 50,\n          locationY: 100,\n          rules: [\n            {\n              name: 'Rule1',\n              conditionLogic: 'and',\n              conditions: [\n                {\n                  leftValueReference: '$Record.Status__c',\n                  operator: 'EqualTo',\n                  rightValue: {\n                    stringValue: 'New'\n                  }\n                }\n              ],\n              connector: {\n                targetReference: 'Assignment1'\n              }\n            }\n          ]\n        }\n      ],\n      assignments: [\n        {\n          name: 'Assignment1',\n          label: 'Set Priority',\n          locationX: 50,\n          locationY: 200,\n          assignmentItems: [\n            {\n              assignToReference: '$Record.Priority__c',\n              operator: 'Assign',\n              value: {\n                stringValue: 'Medium'\n              }\n            }\n          ]\n        }\n      ]\n    };\n  }\n\n  // Generate Validation Rules\n  generateValidationRules(module, industry) {\n    const rules = [];\n    \n    // Date validation rule\n    rules.push({\n      fullName: `${industry}_${module.name.replace(/\\s+/g, '_')}__c.End_Date_After_Start_Date`,\n      active: true,\n      errorConditionFormula: 'End_Date__c < Start_Date__c',\n      errorMessage: 'End Date must be after Start Date',\n      errorDisplayField: 'End_Date__c'\n    });\n\n    // Amount validation rule\n    if (module.features.includes('Amount Tracking')) {\n      rules.push({\n        fullName: `${industry}_${module.name.replace(/\\s+/g, '_')}__c.Amount_Positive`,\n        active: true,\n        errorConditionFormula: 'Amount__c <= 0',\n        errorMessage: 'Amount must be greater than zero',\n        errorDisplayField: 'Amount__c'\n      });\n    }\n\n    // Industry-specific validation rules\n    if (industry === 'Healthcare') {\n      rules.push({\n        fullName: `${industry}_${module.name.replace(/\\s+/g, '_')}__c.Patient_ID_Required`,\n        active: true,\n        errorConditionFormula: 'ISBLANK(Patient_ID__c)',\n        errorMessage: 'Patient ID is required for healthcare records',\n        errorDisplayField: 'Patient_ID__c'\n      });\n    }\n\n    if (industry === 'Real Estate') {\n      rules.push({\n        fullName: `${industry}_${module.name.replace(/\\s+/g, '_')}__c.Property_Address_Required`,\n        active: true,\n        errorConditionFormula: 'ISBLANK(Property_Address__c)',\n        errorMessage: 'Property Address is required for real estate records',\n        errorDisplayField: 'Property_Address__c'\n      });\n      \n      rules.push({\n        fullName: `${industry}_${module.name.replace(/\\s+/g, '_')}__c.Property_Value_Positive`,\n        active: true,\n        errorConditionFormula: 'Property_Value__c <= 0',\n        errorMessage: 'Property Value must be greater than zero',\n        errorDisplayField: 'Property_Value__c'\n      });\n      \n      rules.push({\n        fullName: `${industry}_${module.name.replace(/\\s+/g, '_')}__c.Year_Built_Valid`,\n        active: true,\n        errorConditionFormula: 'Year_Built__c < 1800 || Year_Built__c > YEAR(TODAY())',\n        errorMessage: 'Year Built must be between 1800 and current year',\n        errorDisplayField: 'Year_Built__c'\n      });\n      \n      rules.push({\n        fullName: `${industry}_${module.name.replace(/\\s+/g, '_')}__c.Square_Footage_Positive`,\n        active: true,\n        errorConditionFormula: 'Square_Footage__c <= 0',\n        errorMessage: 'Square Footage must be greater than zero',\n        errorDisplayField: 'Square_Footage__c'\n      });\n    }\n\n    return rules;\n  }\n\n  // Generate Permission Sets\n  generatePermissionSets(module, industry) {\n    const permissionSetName = `${industry}_${module.name.replace(/\\s+/g, '_')}_Permissions`;\n    \n    return {\n      fullName: permissionSetName,\n      label: `${industry} ${module.name} Permissions`,\n      description: `Permission set for ${industry} ${module.name} functionality`,\n      objectPermissions: [\n        {\n          object: `${industry}_${module.name.replace(/\\s+/g, '_')}__c`,\n          allowCreate: true,\n          allowDelete: true,\n          allowEdit: true,\n          allowRead: true,\n          modifyAllRecords: false,\n          viewAllRecords: true\n        }\n      ],\n      fieldPermissions: this.generateFieldPermissions(module, industry)\n    };\n  }\n\n  // Generate Field Permissions\n  generateFieldPermissions(module, industry) {\n    const fields = this.generateFieldsForModule(module, industry);\n    return fields.map(field => ({\n      field: `${industry}_${module.name.replace(/\\s+/g, '_')}__c.${field.fullName}`,\n      editable: true,\n      readable: true\n    }));\n  }\n\n  // Deploy metadata to Salesforce\n  async deployMetadata(metadata, deploymentType = 'partial') {\n    try {\n      // In a real implementation, this would use Salesforce Metadata API\n      console.log('Deploying metadata to Salesforce:', metadata);\n      \n      // Simulate deployment process\n      const deploymentResult = await this.simulateDeployment(metadata);\n      \n      return {\n        success: true,\n        deploymentId: deploymentResult.deploymentId,\n        message: 'Deployment completed successfully',\n        results: deploymentResult.results\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message,\n        message: 'Deployment failed'\n      };\n    }\n  }\n\n  // Simulate deployment process\n  async simulateDeployment(metadata) {\n    // Simulate API delay\n    await new Promise(resolve => setTimeout(resolve, 3000));\n    \n    return {\n      deploymentId: '0Af000000000000AAA',\n      status: 'Succeeded',\n      results: metadata.map(item => ({\n        fullName: item.fullName,\n        success: true,\n        problem: null\n      }))\n    };\n  }\n\n  // Generate complete deployment package\n  generateDeploymentPackage(modules, industry) {\n    const deploymentPackage = {\n      packageManifest: {\n        apiVersion: this.apiVersion,\n        types: []\n      },\n      metadata: []\n    };\n\n    modules.forEach(module => {\n      // Add Custom Object\n      const customObject = this.generateCustomObjectMetadata(module, industry);\n      deploymentPackage.metadata.push(customObject);\n      \n      // Add Flow\n      const flow = this.generateFlowMetadata(module, industry);\n      deploymentPackage.metadata.push(flow);\n      \n      // Add Validation Rules\n      const validationRules = this.generateValidationRules(module, industry);\n      validationRules.forEach(rule => {\n        deploymentPackage.metadata.push(rule);\n      });\n      \n      // Add Permission Set\n      const permissionSet = this.generatePermissionSets(module, industry);\n      deploymentPackage.metadata.push(permissionSet);\n    });\n\n    // Update package manifest\n    deploymentPackage.packageManifest.types = [\n      { name: 'CustomObject', members: deploymentPackage.metadata.filter(m => m.fullName.includes('__c')) },\n      { name: 'Flow', members: deploymentPackage.metadata.filter(m => m.processType) },\n      { name: 'ValidationRule', members: deploymentPackage.metadata.filter(m => m.errorConditionFormula) },\n      { name: 'PermissionSet', members: deploymentPackage.metadata.filter(m => m.objectPermissions) }\n    ];\n\n    return deploymentPackage;\n  }\n\n  // Export metadata as XML (for manual deployment)\n  exportMetadataAsXML(deploymentPackage) {\n    // This would generate proper Salesforce metadata XML\n    return {\n      customObjects: this.generateXMLForCustomObjects(deploymentPackage.metadata),\n      flows: this.generateXMLForFlows(deploymentPackage.metadata),\n      validationRules: this.generateXMLForValidationRules(deploymentPackage.metadata),\n      permissionSets: this.generateXMLForPermissionSets(deploymentPackage.metadata)\n    };\n  }\n\n  generateXMLForCustomObjects(metadata) {\n    const objects = metadata.filter(m => m.fullName.includes('__c'));\n    return objects.map(obj => `\n      <CustomObject xmlns=\"http://soap.sforce.com/2006/04/metadata\">\n        <label>${obj.label}</label>\n        <pluralLabel>${obj.pluralLabel}</pluralLabel>\n        <nameField>\n          <displayFormat>${obj.nameField.displayFormat}</displayFormat>\n          <label>${obj.nameField.label}</label>\n          <type>${obj.nameField.type}</label>\n        </nameField>\n        <deploymentStatus>${obj.deploymentStatus}</deploymentStatus>\n        <sharingModel>${obj.sharingModel}</sharingModel>\n        ${obj.fields.map(field => `\n          <fields>\n            <fullName>${field.fullName}</fullName>\n            <label>${field.label}</label>\n            <type>${field.type}</type>\n            ${field.required ? '<required>true</required>' : ''}\n          </fields>\n        `).join('')}\n      </CustomObject>\n    `).join('\\n');\n  }\n\n  generateXMLForFlows(metadata) {\n    const flows = metadata.filter(m => m.processType);\n    return flows.map(flow => `\n      <Flow xmlns=\"http://soap.sforce.com/2006/04/metadata\">\n        <label>${flow.label}</label>\n        <processType>${flow.processType}</processType>\n        <status>${flow.status}</status>\n        <start>\n          <locationX>${flow.start.locationX}</locationX>\n          <locationY>${flow.start.locationY}</locationY>\n        </start>\n      </Flow>\n    `).join('\\n');\n  }\n\n  generateXMLForValidationRules(metadata) {\n    const rules = metadata.filter(m => m.errorConditionFormula);\n    return rules.map(rule => `\n      <ValidationRule xmlns=\"http://soap.sforce.com/2006/04/metadata\">\n        <fullName>${rule.fullName}</fullName>\n        <active>${rule.active}</active>\n        <errorConditionFormula>${rule.errorConditionFormula}</errorConditionFormula>\n        <errorMessage>${rule.errorMessage}</errorMessage>\n        <errorDisplayField>${rule.errorDisplayField}</errorDisplayField>\n      </ValidationRule>\n    `).join('\\n');\n  }\n\n  generateXMLForPermissionSets(metadata) {\n    const permissionSets = metadata.filter(m => m.objectPermissions);\n    return permissionSets.map(ps => `\n      <PermissionSet xmlns=\"http://soap.sforce.com/2006/04/metadata\">\n        <label>${ps.label}</label>\n        <description>${ps.description}</description>\n        ${ps.objectPermissions.map(obj => `\n          <objectPermissions>\n            <object>${obj.object}</object>\n            <allowCreate>${obj.allowCreate}</allowCreate>\n            <allowDelete>${obj.allowDelete}</allowDelete>\n            <allowEdit>${obj.allowEdit}</allowEdit>\n            <allowRead>${obj.allowRead}</allowRead>\n            <viewAllRecords>${obj.viewAllRecords}</viewAllRecords>\n          </objectPermissions>\n        `).join('')}\n      </PermissionSet>\n    `).join('\\n');\n  }\n}\n\nexport default SalesforceDeploymentService;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}