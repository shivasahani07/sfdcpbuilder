{"ast":null,"code":"var _jsxFileName = \"/Users/shivasahani/project/src/components/CustomQuestions.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './CustomQuestions.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomQuestions = ({\n  domain,\n  industry,\n  onAnswersComplete\n}) => {\n  _s();\n  var _currentQuestion$scal, _currentQuestion$scal2;\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [isComplete, setIsComplete] = useState(false);\n\n  // Dynamic questions based on domain and industry\n  const questions = getQuestionsForDomain(domain, industry);\n  const handleAnswerChange = (questionId, value) => {\n    setAnswers(prev => ({\n      ...prev,\n      [questionId]: value\n    }));\n  };\n  const handleNext = () => {\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(prev => prev + 1);\n    } else {\n      setIsComplete(true);\n      onAnswersComplete(answers);\n    }\n  };\n  const handlePrevious = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(prev => prev - 1);\n    }\n  };\n  const handleSkip = () => {\n    handleNext();\n  };\n  const isCurrentQuestionAnswered = () => {\n    const currentQuestion = questions[currentQuestionIndex];\n    if (!currentQuestion) return true;\n    const answer = answers[currentQuestion.id];\n    return answer !== undefined && answer !== '';\n  };\n  const getProgressPercentage = () => {\n    return (currentQuestionIndex + 1) / questions.length * 100;\n  };\n  if (questions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-questions\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-questions\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"No Additional Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"No custom questions available for \", industry, \" \", domain, \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"complete-button\",\n          onClick: () => onAnswersComplete({}),\n          children: \"Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n  const currentQuestion = questions[currentQuestionIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"custom-questions\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questions-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Additional Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Help us refine your recommendations with a few more questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-fill\",\n          style: {\n            width: `${getProgressPercentage()}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-text\",\n        children: [\"Question \", currentQuestionIndex + 1, \" of \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: currentQuestion.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), currentQuestion.description && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"question-description\",\n          children: currentQuestion.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-content\",\n        children: [currentQuestion.type === 'single-choice' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"single-choice\",\n          children: currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"option-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: currentQuestion.id,\n              value: option.value,\n              checked: answers[currentQuestion.id] === option.value,\n              onChange: e => handleAnswerChange(currentQuestion.id, e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"option-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: option.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 21\n              }, this), option.description && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"option-description\",\n                children: option.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 44\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), currentQuestion.type === 'multiple-choice' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"multiple-choice\",\n          children: currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"option-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: (answers[currentQuestion.id] || []).includes(option.value),\n              onChange: e => {\n                const currentAnswers = answers[currentQuestion.id] || [];\n                if (e.target.checked) {\n                  handleAnswerChange(currentQuestion.id, [...currentAnswers, option.value]);\n                } else {\n                  handleAnswerChange(currentQuestion.id, currentAnswers.filter(v => v !== option.value));\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"option-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: option.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 21\n              }, this), option.description && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"option-description\",\n                children: option.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 44\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), currentQuestion.type === 'text' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-input\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: answers[currentQuestion.id] || '',\n            onChange: e => handleAnswerChange(currentQuestion.id, e.target.value),\n            placeholder: currentQuestion.placeholder,\n            rows: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), currentQuestion.type === 'number' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: answers[currentQuestion.id] || '',\n            onChange: e => handleAnswerChange(currentQuestion.id, e.target.value),\n            placeholder: currentQuestion.placeholder,\n            min: currentQuestion.min,\n            max: currentQuestion.max\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this), currentQuestion.unit && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"input-unit\",\n            children: currentQuestion.unit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 40\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), currentQuestion.type === 'scale' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scale-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"scale-labels\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: ((_currentQuestion$scal = currentQuestion.scaleLabels) === null || _currentQuestion$scal === void 0 ? void 0 : _currentQuestion$scal.min) || '1'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: ((_currentQuestion$scal2 = currentQuestion.scaleLabels) === null || _currentQuestion$scal2 === void 0 ? void 0 : _currentQuestion$scal2.max) || '10'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"1\",\n            max: \"10\",\n            value: answers[currentQuestion.id] || 5,\n            onChange: e => handleAnswerChange(currentQuestion.id, parseInt(e.target.value)),\n            className: \"scale-slider\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"scale-value\",\n            children: [\"Selected: \", answers[currentQuestion.id] || 5]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"previous-button\",\n          onClick: handlePrevious,\n          disabled: currentQuestionIndex === 0,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"skip-button\",\n          onClick: handleSkip,\n          children: \"Skip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"next-button\",\n          onClick: handleNext,\n          disabled: !isCurrentQuestionAnswered(),\n          children: currentQuestionIndex === questions.length - 1 ? 'Complete' : 'Next'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questions-navigation\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-dots\",\n        children: questions.map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `dot ${index === currentQuestionIndex ? 'active' : ''} ${answers[questions[index].id] ? 'answered' : ''}`,\n          onClick: () => setCurrentQuestionIndex(index)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n// Function to generate questions based on domain and industry\n_s(CustomQuestions, \"4lFrUk4htRXmFeAdtwIVWVEaMac=\");\n_c = CustomQuestions;\nconst getQuestionsForDomain = (domain, industry) => {\n  const baseQuestions = [];\n\n  // Common questions for all domains\n  baseQuestions.push({\n    id: 'team_size',\n    type: 'single-choice',\n    question: 'What is your current team size?',\n    description: 'This helps us recommend appropriate module complexity and resource requirements.',\n    options: [{\n      value: '1-5',\n      label: '1-5 people',\n      description: 'Small team'\n    }, {\n      value: '6-20',\n      label: '6-20 people',\n      description: 'Medium team'\n    }, {\n      value: '21-50',\n      label: '21-50 people',\n      description: 'Large team'\n    }, {\n      value: '50+',\n      label: '50+ people',\n      description: 'Enterprise team'\n    }]\n  });\n  baseQuestions.push({\n    id: 'budget_range',\n    type: 'single-choice',\n    question: 'What is your estimated budget for this implementation?',\n    description: 'Budget considerations help us prioritize modules and suggest cost-effective solutions.',\n    options: [{\n      value: 'low',\n      label: 'Under $10,000',\n      description: 'Basic implementation'\n    }, {\n      value: 'medium',\n      label: '$10,000 - $50,000',\n      description: 'Standard implementation'\n    }, {\n      value: 'high',\n      label: '$50,000 - $100,000',\n      description: 'Advanced implementation'\n    }, {\n      value: 'enterprise',\n      label: 'Over $100,000',\n      description: 'Enterprise implementation'\n    }]\n  });\n  baseQuestions.push({\n    id: 'timeline',\n    type: 'single-choice',\n    question: 'What is your preferred implementation timeline?',\n    description: 'Timeline preferences help us sequence modules and suggest phased approaches.',\n    options: [{\n      value: 'urgent',\n      label: '1-3 months',\n      description: 'Urgent implementation'\n    }, {\n      value: 'standard',\n      label: '3-6 months',\n      description: 'Standard timeline'\n    }, {\n      value: 'flexible',\n      label: '6-12 months',\n      description: 'Flexible timeline'\n    }, {\n      value: 'long-term',\n      label: '12+ months',\n      description: 'Long-term implementation'\n    }]\n  });\n\n  // Domain-specific questions\n  if (domain === 'Sales') {\n    baseQuestions.push({\n      id: 'sales_process',\n      type: 'single-choice',\n      question: 'How would you describe your current sales process?',\n      options: [{\n        value: 'informal',\n        label: 'Informal',\n        description: 'No formal process'\n      }, {\n        value: 'basic',\n        label: 'Basic',\n        description: 'Some structure'\n      }, {\n        value: 'structured',\n        label: 'Structured',\n        description: 'Well-defined process'\n      }, {\n        value: 'advanced',\n        label: 'Advanced',\n        description: 'Highly optimized process'\n      }]\n    });\n    baseQuestions.push({\n      id: 'sales_tools',\n      type: 'multiple-choice',\n      question: 'What sales tools do you currently use?',\n      options: [{\n        value: 'spreadsheet',\n        label: 'Spreadsheets (Excel, Google Sheets)'\n      }, {\n        value: 'crm_basic',\n        label: 'Basic CRM'\n      }, {\n        value: 'crm_advanced',\n        label: 'Advanced CRM'\n      }, {\n        value: 'email_tools',\n        label: 'Email marketing tools'\n      }, {\n        value: 'phone_systems',\n        label: 'Phone systems'\n      }, {\n        value: 'none',\n        label: 'None'\n      }]\n    });\n  }\n  if (domain === 'Marketing') {\n    baseQuestions.push({\n      id: 'marketing_channels',\n      type: 'multiple-choice',\n      question: 'Which marketing channels do you currently use?',\n      options: [{\n        value: 'email',\n        label: 'Email Marketing'\n      }, {\n        value: 'social',\n        label: 'Social Media'\n      }, {\n        value: 'content',\n        label: 'Content Marketing'\n      }, {\n        value: 'paid_ads',\n        label: 'Paid Advertising'\n      }, {\n        value: 'events',\n        label: 'Events & Trade Shows'\n      }, {\n        value: 'seo',\n        label: 'SEO'\n      }, {\n        value: 'referral',\n        label: 'Referral Programs'\n      }]\n    });\n  }\n  if (domain === 'Service') {\n    baseQuestions.push({\n      id: 'support_channels',\n      type: 'multiple-choice',\n      question: 'What customer support channels do you provide?',\n      options: [{\n        value: 'email',\n        label: 'Email Support'\n      }, {\n        value: 'phone',\n        label: 'Phone Support'\n      }, {\n        value: 'chat',\n        label: 'Live Chat'\n      }, {\n        value: 'portal',\n        label: 'Self-Service Portal'\n      }, {\n        value: 'social',\n        label: 'Social Media'\n      }, {\n        value: 'ticket',\n        label: 'Ticket System'\n      }]\n    });\n  }\n\n  // Industry-specific questions\n  if (industry === 'Real Estate') {\n    baseQuestions.push({\n      id: 'property_types',\n      type: 'multiple-choice',\n      question: 'What types of properties do you work with?',\n      options: [{\n        value: 'residential',\n        label: 'Residential'\n      }, {\n        value: 'commercial',\n        label: 'Commercial'\n      }, {\n        value: 'industrial',\n        label: 'Industrial'\n      }, {\n        value: 'land',\n        label: 'Land'\n      }, {\n        value: 'rental',\n        label: 'Rental Properties'\n      }]\n    });\n    baseQuestions.push({\n      id: 'mls_integration',\n      type: 'single-choice',\n      question: 'Do you need MLS integration?',\n      description: 'MLS (Multiple Listing Service) integration for property data.',\n      options: [{\n        value: 'yes',\n        label: 'Yes, we need MLS integration'\n      }, {\n        value: 'maybe',\n        label: 'Maybe in the future'\n      }, {\n        value: 'no',\n        label: 'No, not needed'\n      }]\n    });\n  }\n  if (industry === 'Healthcare') {\n    baseQuestions.push({\n      id: 'hipaa_compliance',\n      type: 'single-choice',\n      question: 'Do you need HIPAA compliance features?',\n      description: 'Healthcare organizations may need HIPAA-compliant solutions.',\n      options: [{\n        value: 'required',\n        label: 'Required'\n      }, {\n        value: 'preferred',\n        label: 'Preferred'\n      }, {\n        value: 'not_needed',\n        label: 'Not needed'\n      }]\n    });\n  }\n  if (industry === 'Financial Services') {\n    baseQuestions.push({\n      id: 'compliance_requirements',\n      type: 'multiple-choice',\n      question: 'What compliance requirements do you have?',\n      options: [{\n        value: 'sox',\n        label: 'SOX Compliance'\n      }, {\n        value: 'gdpr',\n        label: 'GDPR Compliance'\n      }, {\n        value: 'pci',\n        label: 'PCI DSS'\n      }, {\n        value: 'finra',\n        label: 'FINRA'\n      }, {\n        value: 'other',\n        label: 'Other'\n      }]\n    });\n  }\n\n  // Additional custom questions\n  baseQuestions.push({\n    id: 'integration_needs',\n    type: 'text',\n    question: 'Are there any specific systems you need to integrate with?',\n    description: 'Please list any existing systems, databases, or third-party applications you need to connect.',\n    placeholder: 'e.g., QuickBooks, Mailchimp, HubSpot, custom databases...'\n  });\n  baseQuestions.push({\n    id: 'success_metrics',\n    type: 'text',\n    question: 'How will you measure success for this implementation?',\n    description: 'What KPIs or metrics are most important to your organization?',\n    placeholder: 'e.g., Increase lead conversion by 25%, Reduce support response time to under 2 hours...'\n  });\n  baseQuestions.push({\n    id: 'priority_level',\n    type: 'scale',\n    question: 'How would you rate the priority of this implementation?',\n    description: 'Rate from 1 (low priority) to 10 (critical priority).',\n    scaleLabels: {\n      min: 'Low Priority',\n      max: 'Critical Priority'\n    }\n  });\n  return baseQuestions;\n};\nexport default CustomQuestions;\nvar _c;\n$RefreshReg$(_c, \"CustomQuestions\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CustomQuestions","domain","industry","onAnswersComplete","_s","_currentQuestion$scal","_currentQuestion$scal2","currentQuestionIndex","setCurrentQuestionIndex","answers","setAnswers","isComplete","setIsComplete","questions","getQuestionsForDomain","handleAnswerChange","questionId","value","prev","handleNext","length","handlePrevious","handleSkip","isCurrentQuestionAnswered","currentQuestion","answer","id","undefined","getProgressPercentage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","width","question","description","type","options","map","option","index","name","checked","onChange","e","target","label","includes","currentAnswers","filter","v","placeholder","rows","min","max","unit","scaleLabels","parseInt","disabled","_","_c","baseQuestions","push","$RefreshReg$"],"sources":["/Users/shivasahani/project/src/components/CustomQuestions.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './CustomQuestions.css';\n\nconst CustomQuestions = ({ domain, industry, onAnswersComplete }) => {\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [isComplete, setIsComplete] = useState(false);\n\n  // Dynamic questions based on domain and industry\n  const questions = getQuestionsForDomain(domain, industry);\n\n  const handleAnswerChange = (questionId, value) => {\n    setAnswers(prev => ({\n      ...prev,\n      [questionId]: value\n    }));\n  };\n\n  const handleNext = () => {\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(prev => prev + 1);\n    } else {\n      setIsComplete(true);\n      onAnswersComplete(answers);\n    }\n  };\n\n  const handlePrevious = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(prev => prev - 1);\n    }\n  };\n\n  const handleSkip = () => {\n    handleNext();\n  };\n\n  const isCurrentQuestionAnswered = () => {\n    const currentQuestion = questions[currentQuestionIndex];\n    if (!currentQuestion) return true;\n    \n    const answer = answers[currentQuestion.id];\n    return answer !== undefined && answer !== '';\n  };\n\n  const getProgressPercentage = () => {\n    return ((currentQuestionIndex + 1) / questions.length) * 100;\n  };\n\n  if (questions.length === 0) {\n    return (\n      <div className=\"custom-questions\">\n        <div className=\"no-questions\">\n          <h3>No Additional Questions</h3>\n          <p>No custom questions available for {industry} {domain}.</p>\n          <button className=\"complete-button\" onClick={() => onAnswersComplete({})}>\n            Continue\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  const currentQuestion = questions[currentQuestionIndex];\n\n  return (\n    <div className=\"custom-questions\">\n      <div className=\"questions-header\">\n        <h3>Additional Questions</h3>\n        <p>Help us refine your recommendations with a few more questions</p>\n        <div className=\"progress-bar\">\n          <div \n            className=\"progress-fill\"\n            style={{ width: `${getProgressPercentage()}%` }}\n          ></div>\n        </div>\n        <div className=\"progress-text\">\n          Question {currentQuestionIndex + 1} of {questions.length}\n        </div>\n      </div>\n\n      <div className=\"question-container\">\n        <div className=\"question-header\">\n          <h4>{currentQuestion.question}</h4>\n          {currentQuestion.description && (\n            <p className=\"question-description\">{currentQuestion.description}</p>\n          )}\n        </div>\n\n        <div className=\"question-content\">\n          {currentQuestion.type === 'single-choice' && (\n            <div className=\"single-choice\">\n              {currentQuestion.options.map((option, index) => (\n                <label key={index} className=\"option-label\">\n                  <input\n                    type=\"radio\"\n                    name={currentQuestion.id}\n                    value={option.value}\n                    checked={answers[currentQuestion.id] === option.value}\n                    onChange={(e) => handleAnswerChange(currentQuestion.id, e.target.value)}\n                  />\n                  <span className=\"option-text\">\n                    <strong>{option.label}</strong>\n                    {option.description && <span className=\"option-description\">{option.description}</span>}\n                  </span>\n                </label>\n              ))}\n            </div>\n          )}\n\n          {currentQuestion.type === 'multiple-choice' && (\n            <div className=\"multiple-choice\">\n              {currentQuestion.options.map((option, index) => (\n                <label key={index} className=\"option-label\">\n                  <input\n                    type=\"checkbox\"\n                    checked={(answers[currentQuestion.id] || []).includes(option.value)}\n                    onChange={(e) => {\n                      const currentAnswers = answers[currentQuestion.id] || [];\n                      if (e.target.checked) {\n                        handleAnswerChange(currentQuestion.id, [...currentAnswers, option.value]);\n                      } else {\n                        handleAnswerChange(currentQuestion.id, currentAnswers.filter(v => v !== option.value));\n                      }\n                    }}\n                  />\n                  <span className=\"option-text\">\n                    <strong>{option.label}</strong>\n                    {option.description && <span className=\"option-description\">{option.description}</span>}\n                  </span>\n                </label>\n              ))}\n            </div>\n          )}\n\n          {currentQuestion.type === 'text' && (\n            <div className=\"text-input\">\n              <textarea\n                value={answers[currentQuestion.id] || ''}\n                onChange={(e) => handleAnswerChange(currentQuestion.id, e.target.value)}\n                placeholder={currentQuestion.placeholder}\n                rows={4}\n              />\n            </div>\n          )}\n\n          {currentQuestion.type === 'number' && (\n            <div className=\"number-input\">\n              <input\n                type=\"number\"\n                value={answers[currentQuestion.id] || ''}\n                onChange={(e) => handleAnswerChange(currentQuestion.id, e.target.value)}\n                placeholder={currentQuestion.placeholder}\n                min={currentQuestion.min}\n                max={currentQuestion.max}\n              />\n              {currentQuestion.unit && <span className=\"input-unit\">{currentQuestion.unit}</span>}\n            </div>\n          )}\n\n          {currentQuestion.type === 'scale' && (\n            <div className=\"scale-input\">\n              <div className=\"scale-labels\">\n                <span>{currentQuestion.scaleLabels?.min || '1'}</span>\n                <span>{currentQuestion.scaleLabels?.max || '10'}</span>\n              </div>\n              <input\n                type=\"range\"\n                min=\"1\"\n                max=\"10\"\n                value={answers[currentQuestion.id] || 5}\n                onChange={(e) => handleAnswerChange(currentQuestion.id, parseInt(e.target.value))}\n                className=\"scale-slider\"\n              />\n              <div className=\"scale-value\">\n                Selected: {answers[currentQuestion.id] || 5}\n              </div>\n            </div>\n          )}\n        </div>\n\n        <div className=\"question-actions\">\n          <button \n            className=\"previous-button\"\n            onClick={handlePrevious}\n            disabled={currentQuestionIndex === 0}\n          >\n            Previous\n          </button>\n          \n          <button \n            className=\"skip-button\"\n            onClick={handleSkip}\n          >\n            Skip\n          </button>\n          \n          <button \n            className=\"next-button\"\n            onClick={handleNext}\n            disabled={!isCurrentQuestionAnswered()}\n          >\n            {currentQuestionIndex === questions.length - 1 ? 'Complete' : 'Next'}\n          </button>\n        </div>\n      </div>\n\n      <div className=\"questions-navigation\">\n        <div className=\"question-dots\">\n          {questions.map((_, index) => (\n            <div\n              key={index}\n              className={`dot ${index === currentQuestionIndex ? 'active' : ''} ${answers[questions[index].id] ? 'answered' : ''}`}\n              onClick={() => setCurrentQuestionIndex(index)}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Function to generate questions based on domain and industry\nconst getQuestionsForDomain = (domain, industry) => {\n  const baseQuestions = [];\n\n  // Common questions for all domains\n  baseQuestions.push({\n    id: 'team_size',\n    type: 'single-choice',\n    question: 'What is your current team size?',\n    description: 'This helps us recommend appropriate module complexity and resource requirements.',\n    options: [\n      { value: '1-5', label: '1-5 people', description: 'Small team' },\n      { value: '6-20', label: '6-20 people', description: 'Medium team' },\n      { value: '21-50', label: '21-50 people', description: 'Large team' },\n      { value: '50+', label: '50+ people', description: 'Enterprise team' }\n    ]\n  });\n\n  baseQuestions.push({\n    id: 'budget_range',\n    type: 'single-choice',\n    question: 'What is your estimated budget for this implementation?',\n    description: 'Budget considerations help us prioritize modules and suggest cost-effective solutions.',\n    options: [\n      { value: 'low', label: 'Under $10,000', description: 'Basic implementation' },\n      { value: 'medium', label: '$10,000 - $50,000', description: 'Standard implementation' },\n      { value: 'high', label: '$50,000 - $100,000', description: 'Advanced implementation' },\n      { value: 'enterprise', label: 'Over $100,000', description: 'Enterprise implementation' }\n    ]\n  });\n\n  baseQuestions.push({\n    id: 'timeline',\n    type: 'single-choice',\n    question: 'What is your preferred implementation timeline?',\n    description: 'Timeline preferences help us sequence modules and suggest phased approaches.',\n    options: [\n      { value: 'urgent', label: '1-3 months', description: 'Urgent implementation' },\n      { value: 'standard', label: '3-6 months', description: 'Standard timeline' },\n      { value: 'flexible', label: '6-12 months', description: 'Flexible timeline' },\n      { value: 'long-term', label: '12+ months', description: 'Long-term implementation' }\n    ]\n  });\n\n  // Domain-specific questions\n  if (domain === 'Sales') {\n    baseQuestions.push({\n      id: 'sales_process',\n      type: 'single-choice',\n      question: 'How would you describe your current sales process?',\n      options: [\n        { value: 'informal', label: 'Informal', description: 'No formal process' },\n        { value: 'basic', label: 'Basic', description: 'Some structure' },\n        { value: 'structured', label: 'Structured', description: 'Well-defined process' },\n        { value: 'advanced', label: 'Advanced', description: 'Highly optimized process' }\n      ]\n    });\n\n    baseQuestions.push({\n      id: 'sales_tools',\n      type: 'multiple-choice',\n      question: 'What sales tools do you currently use?',\n      options: [\n        { value: 'spreadsheet', label: 'Spreadsheets (Excel, Google Sheets)' },\n        { value: 'crm_basic', label: 'Basic CRM' },\n        { value: 'crm_advanced', label: 'Advanced CRM' },\n        { value: 'email_tools', label: 'Email marketing tools' },\n        { value: 'phone_systems', label: 'Phone systems' },\n        { value: 'none', label: 'None' }\n      ]\n    });\n  }\n\n  if (domain === 'Marketing') {\n    baseQuestions.push({\n      id: 'marketing_channels',\n      type: 'multiple-choice',\n      question: 'Which marketing channels do you currently use?',\n      options: [\n        { value: 'email', label: 'Email Marketing' },\n        { value: 'social', label: 'Social Media' },\n        { value: 'content', label: 'Content Marketing' },\n        { value: 'paid_ads', label: 'Paid Advertising' },\n        { value: 'events', label: 'Events & Trade Shows' },\n        { value: 'seo', label: 'SEO' },\n        { value: 'referral', label: 'Referral Programs' }\n      ]\n    });\n  }\n\n  if (domain === 'Service') {\n    baseQuestions.push({\n      id: 'support_channels',\n      type: 'multiple-choice',\n      question: 'What customer support channels do you provide?',\n      options: [\n        { value: 'email', label: 'Email Support' },\n        { value: 'phone', label: 'Phone Support' },\n        { value: 'chat', label: 'Live Chat' },\n        { value: 'portal', label: 'Self-Service Portal' },\n        { value: 'social', label: 'Social Media' },\n        { value: 'ticket', label: 'Ticket System' }\n      ]\n    });\n  }\n\n  // Industry-specific questions\n  if (industry === 'Real Estate') {\n    baseQuestions.push({\n      id: 'property_types',\n      type: 'multiple-choice',\n      question: 'What types of properties do you work with?',\n      options: [\n        { value: 'residential', label: 'Residential' },\n        { value: 'commercial', label: 'Commercial' },\n        { value: 'industrial', label: 'Industrial' },\n        { value: 'land', label: 'Land' },\n        { value: 'rental', label: 'Rental Properties' }\n      ]\n    });\n\n    baseQuestions.push({\n      id: 'mls_integration',\n      type: 'single-choice',\n      question: 'Do you need MLS integration?',\n      description: 'MLS (Multiple Listing Service) integration for property data.',\n      options: [\n        { value: 'yes', label: 'Yes, we need MLS integration' },\n        { value: 'maybe', label: 'Maybe in the future' },\n        { value: 'no', label: 'No, not needed' }\n      ]\n    });\n  }\n\n  if (industry === 'Healthcare') {\n    baseQuestions.push({\n      id: 'hipaa_compliance',\n      type: 'single-choice',\n      question: 'Do you need HIPAA compliance features?',\n      description: 'Healthcare organizations may need HIPAA-compliant solutions.',\n      options: [\n        { value: 'required', label: 'Required' },\n        { value: 'preferred', label: 'Preferred' },\n        { value: 'not_needed', label: 'Not needed' }\n      ]\n    });\n  }\n\n  if (industry === 'Financial Services') {\n    baseQuestions.push({\n      id: 'compliance_requirements',\n      type: 'multiple-choice',\n      question: 'What compliance requirements do you have?',\n      options: [\n        { value: 'sox', label: 'SOX Compliance' },\n        { value: 'gdpr', label: 'GDPR Compliance' },\n        { value: 'pci', label: 'PCI DSS' },\n        { value: 'finra', label: 'FINRA' },\n        { value: 'other', label: 'Other' }\n      ]\n    });\n  }\n\n  // Additional custom questions\n  baseQuestions.push({\n    id: 'integration_needs',\n    type: 'text',\n    question: 'Are there any specific systems you need to integrate with?',\n    description: 'Please list any existing systems, databases, or third-party applications you need to connect.',\n    placeholder: 'e.g., QuickBooks, Mailchimp, HubSpot, custom databases...'\n  });\n\n  baseQuestions.push({\n    id: 'success_metrics',\n    type: 'text',\n    question: 'How will you measure success for this implementation?',\n    description: 'What KPIs or metrics are most important to your organization?',\n    placeholder: 'e.g., Increase lead conversion by 25%, Reduce support response time to under 2 hours...'\n  });\n\n  baseQuestions.push({\n    id: 'priority_level',\n    type: 'scale',\n    question: 'How would you rate the priority of this implementation?',\n    description: 'Rate from 1 (low priority) to 10 (critical priority).',\n    scaleLabels: {\n      min: 'Low Priority',\n      max: 'Critical Priority'\n    }\n  });\n\n  return baseQuestions;\n};\n\nexport default CustomQuestions;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}